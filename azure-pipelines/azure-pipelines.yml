 # Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  - template: global.yaml

pool:
  vmImage: ubuntu-latest

## Build
## -----

stages:

- stage: BuildAndPublish
  displayName: Build and Publish
  jobs:
    - job: BuildJob
      displayName: Environment Setup & Build
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x' 
        displayName: 'Install Node.js'

      - script: |
          npm install
        displayName: 'Install dependencies'

      - script: |
          npm install -g mbt @ui5/cli
        displayName: 'Install Cloud MTA Build Tool (MBT)'

      - script: |
          mbt build -p=cf
        displayName: mbt build

      - script: |
          echo SAP App Version: $(version)
          cd mta_archives
          ls
          pwd
          cd ../
          pwd
          echo Pipeline.Workspace is : $(Pipeline.Workspace)
          echo Artificat Staging dir : $(Build.ArtifactStagingDirectory)
          echo Build Repo LocalPath :$(Build.Repository.LocalPath)
        displayName: 'List folder directory content post-build'
      
      - task: PublishPipelineArtifact@1
        inputs:
          #Default location & name of MTA Archive from Cloud MTA Build
          targetPath: '$(Build.Repository.LocalPath)/mta_archives/$(appName)_$(appVersion).mtar'  
          artifact: 'SAP-BTP-SAPUI5'
          publishLocation: 'pipeline'

    - job: AppVariableDefinition
      displayName: App Variable Definition
      steps:
       - bash : |
          pip install shyaml
          echo "##vso[task.setvariable variable=appVersion;isoutput=true]$(cat mta.yaml | shyaml get-value version)"
          echo "##vso[task.setvariable variable=appName;isoutput=true]$(cat mta.yaml | shyaml get-value ID)"
    
    - job: Deploy
      steps:
        - checkout: none
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Pipeline Artifact'
          inputs:
            artifactName: 'SAP-BTP-SAPUI5'
      dependsOn: BuildJob
      condition: suceeded()

# steps:
# - task: DownloadPipelineArtifact@2
#   displayName: 'Download Pipeline Artifact'
#   inputs:
#     artifactName: '$(appID)'
# steps:
# - bash: 'cf install-plugin multiapps -f'
#   displayName: 'Install Dependency'
#Your build pipeline references a secret variable named ‘dev-user’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references a secret variable named ‘dev-password’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
# variables:
#   api-url: 'https://api.cf.ap21.hana.ondemand.com'
#   org-name: '922c6e7ctrial'
#   dev-org: 'dev'

# steps:
# - bash: 'cf login -a $(api-url) -u $(dev-user) -p $(dev-password) -o $(org-name) -s $(dev-org) '
#   displayName: 'CF Login'
# steps:
# - bash: |
#    cd _sap-ui5-first/$(appID)
   
#    cf deploy $(appID)_$(version).mtar
#   displayName: 'CF Deploy'


